version: '3.8'

services:
  # BondX Backend API
  bondx-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - API_BASE_URL=http://localhost:8000
      - WS_BASE_URL=ws://localhost:8000
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-in-production}
      - REFRESH_TOKEN_SECRET_KEY=${REFRESH_TOKEN_SECRET_KEY:-your-super-secret-refresh-key-change-in-production}
    volumes:
      - ./data:/app/data:ro
      - ./bondx:/app/bondx:ro
    networks:
      - bondx-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # BondX Frontend
  bondx-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
      - VITE_WS_BASE_URL=ws://localhost:8000
    depends_on:
      - bondx-backend
    networks:
      - bondx-network
    restart: unless-stopped

  # Redis for WebSocket state management
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bondx-network
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deploy/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - bondx-backend
      - bondx-frontend
    networks:
      - bondx-network
    restart: unless-stopped

networks:
  bondx-network:
    driver: bridge

volumes:
  redis-data:
