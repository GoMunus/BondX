# Production HAProxy Configuration for BondX
# Supports WebSocket stickiness, TLS, and load balancing

global
    # Logging
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

    # SSL/TLS
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options prefer-server-ciphers no-sslv3 no-tlsv10 no-tlsv11
    ssl-default-bind-ssl-options no-sslv3 no-tlsv10 no-tlsv11
    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    option forwardfor
    option http-server-close

# Frontend for HTTP (redirect to HTTPS)
frontend http_frontend
    bind *:80
    redirect scheme https code 301 if !{ ssl_fc }

# Frontend for HTTPS
frontend https_frontend
    bind *:443 ssl crt /etc/haproxy/ssl/bondx.pem
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    
    # Security headers
    http-response add-header X-Frame-Options DENY
    http-response add-header X-Content-Type-Options nosniff
    http-response add-header X-XSS-Protection "1; mode=block"
    http-response add-header Referrer-Policy "strict-origin-when-cross-origin"
    http-response add-header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
    
    # Rate limiting
    stick-table type ip size 100k expire 30s store http_req_rate(10s)
    http-request track-sc0 src
    http-request deny deny_status 429 if { sc_http_req_rate(0) gt 100 }
    
    # WebSocket detection and routing
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i ws
    
    # Route WebSocket connections to WebSocket backend
    use_backend websocket_backend if is_websocket
    
    # Route API calls to API backend
    use_backend api_backend if { path_beg /api/ }
    
    # Default to API backend
    default_backend api_backend

# Backend for API calls
backend api_backend
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
    
    # Backend servers
    server bondx-backend-1 bondx-backend-1:8000 check
    server bondx-backend-2 bondx-backend-2:8000 check
    server bondx-backend-3 bondx-backend-3:8000 check
    
    # Timeouts
    timeout connect 5s
    timeout server 30s
    
    # Health check
    option httpchk GET /health
    http-check expect status 200

# Backend for WebSocket connections
backend websocket_backend
    balance source
    option httpchk GET /health
    http-check expect status 200
    default-server inter 3s fall 3 rise 2
    
    # WebSocket specific settings
    timeout connect 5s
    timeout server 60s
    timeout tunnel 3600s
    
    # Backend servers
    server bondx-backend-1 bondx-backend-1:8000 check
    server bondx-backend-2 bondx-backend-2:8000 check
    server bondx-backend-3 bondx-backend-3:8000 check
    
    # Health check
    option httpchk GET /health
    http-check expect status 200

# Stats page (protected)
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:secure_password_here
    stats admin if TRUE
